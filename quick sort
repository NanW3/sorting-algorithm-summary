/**
 *  time complexity o(nlogn) average  o(n^2) worse case
 *  space complexity o(1)
 */
 

public class QuickSort {
    
    public static void quicksort(int[] array) {
        quicksort(array, 0, array.length - 1);
    }

    public static void quicksort(int[] array, int left, int right) {
        if (left >= right) {
            return;
        }
        int pivot = array[left + (right - left)/2];
        int index = partition(array, left, right, pivot);
        quicksort(array, left, index-1);
        quicksort(array, index, right);
    }

    public static int partition(int[] array, int left, int right, int pivot) {

        while (left <= right) {
            while (array[left] < pivot) {
                left++;
            }
            while (array[right] > pivot) {
                right--;
            }
            if (left <= right) {
                int temp = array[left];
                array[left] = array[right];
                array[right] = temp;
                left++;
                right--;
            }
        }
        return left;
    }

    public static void main(String[] args) {
        int[] array = {9, 3, 7, 3};
        for (int n : array) {
            System.out.print(n);
        }
        System.out.println();
        quicksort(array);
        for (int n : array) {
            System.out.print(n);
        }
        System.out.println();
    }
}
